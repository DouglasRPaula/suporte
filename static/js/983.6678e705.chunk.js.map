{"version":3,"file":"static/js/983.6678e705.chunk.js","mappings":"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","sources":["frontend/cadastros/Select.js","frontend/editar/EditarCadastro.jsx","frontend/modal/ErrorMessage.jsx"],"sourcesContent":["export default function Select({ value, options, onChange }) {\r\n  return (\r\n    <select className=\"form-select\" value={value} required onChange={onChange}>\r\n      <option value=\"\">Selecione uma opção</option>\r\n      {Object.entries(options).map(([optionValue, label]) => (\r\n        <option key={optionValue} value={optionValue}>\r\n          {label}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n}","import { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\nimport {\r\n  atualizarValor,\r\n  limparForm,\r\n  preencherChamados,\r\n  tempoChamado,\r\n} from \"../redux/chamadosSlice\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport Select from \"../cadastros/Select\";\r\nimport {\r\n  contratos,\r\n  criticidades,\r\n  empresas,\r\n  tipoChamado,\r\n} from \"../constants/opcoesFormulario\";\r\nimport ErrorMessage from \"../modal/ErrorMessage\";\r\n\r\nexport default function EditarChamado() {\r\n  const chamado = useSelector((state) => state.chamado);\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n  const [chamadoEncerrado, setChamadoEncerrado] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const formatarDataParaServer = (data) => {\r\n    if (!data) return \"\";\r\n    if (!(data instanceof Date) || isNaN(data.getTime())) {\r\n      return \"\";\r\n    }\r\n    return data.toISOString();\r\n  };\r\n\r\n  const formatarDataParaInput = (data) => {\r\n    if (!data) return \"\";\r\n\r\n    const dataFormatada = new Date(data);\r\n    const ano = dataFormatada.getFullYear();\r\n    const mes = String(dataFormatada.getMonth() + 1).padStart(2, \"0\");\r\n    const dia = String(dataFormatada.getDate()).padStart(2, \"0\");\r\n    const horas = String(dataFormatada.getHours()).padStart(2, \"0\");\r\n    const minutos = String(dataFormatada.getMinutes()).padStart(2, \"0\");\r\n\r\n    return `${ano}-${mes}-${dia}T${horas}:${minutos}`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const id = params.id;\r\n        const response = await fetch(`http://localhost:5000/chamados/${id}`);\r\n        if (!response.ok) {\r\n          throw new Error(\"Erro ao obter os detalhes do chamado.\");\r\n        }\r\n        const data = await response.json();\r\n        dispatch(preencherChamados(data));\r\n      } catch (error) {\r\n        console.error(\"Erro ao obter os detalhes do chamado:\", error);\r\n        setErrorMessage(\r\n          \"Erro ao obter os detalhes do chamado. Por favor, tente novamente.\"\r\n        );\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [dispatch, params.id]);\r\n\r\n  const aoEnviar = useCallback(\r\n    async (e) => {\r\n      e.preventDefault();\r\n\r\n      if (!chamado) {\r\n        setErrorMessage(\"chamado is undefined\");\r\n        return;\r\n      }\r\n\r\n      const { dataInicio, dataEncerramento } = chamado;\r\n\r\n      const inicio = new Date(dataInicio);\r\n      const encerramento = new Date(dataEncerramento);\r\n\r\n      if (encerramento < inicio) {\r\n        setErrorMessage(\r\n          \"A data de encerramento não pode ser anterior à data de início.\"\r\n        );\r\n        return;\r\n      }\r\n\r\n      const dataInicioFormatted = formatarDataParaServer(\r\n        new Date(chamado.dataInicio)\r\n      );\r\n      const dataEncerramentoFormatted = formatarDataParaServer(\r\n        new Date(chamado.dataEncerramento)\r\n      );\r\n\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:5000/chamados/edit/${params.id}`,\r\n          {\r\n            method: \"PATCH\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n              ...chamado,\r\n              dataInicio: dataInicioFormatted,\r\n              dataEncerramento: dataEncerramentoFormatted,\r\n            }),\r\n          }\r\n        );\r\n\r\n        if (!response.ok) {\r\n          const data = await response.json();\r\n          dispatch(\r\n            atualizarValor({\r\n              error: data.error,\r\n            })\r\n          );\r\n          return;\r\n        }\r\n\r\n        dispatch(limparForm());\r\n        dispatch(tempoChamado(chamado));\r\n        navigate(\"/chamados\");\r\n      } catch (error) {\r\n        console.error(\"Erro ao editar o chamado:\", error);\r\n        setErrorMessage(\r\n          \"Erro ao editar o chamado. Por favor, tente novamente.\"\r\n        );\r\n      }\r\n    },\r\n    [chamado, dispatch, navigate, params.id]\r\n  );\r\n\r\n  const aoVoltar = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      navigate(\"/chamados\");\r\n    },\r\n    [navigate]\r\n  );\r\n\r\n  const handleSwitchChange = useCallback(\r\n    (e) => {\r\n      const valor = e.target.checked;\r\n      setChamadoEncerrado(e.target.checked);\r\n\r\n      dispatch(atualizarValor({ campo: \"chamadoEncerrado\", valor }));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <div className=\"ml-sm-auto\">\r\n      <div className=\"my-2\">\r\n        <div className=\"d-flex justify-content-between flex-nowrap align-items-center pb-2 mb-3 border-bottom\">\r\n          <h1 className=\"h4 mb-0\">Atualizar chamado</h1>\r\n        </div>\r\n      </div>\r\n      <Form id=\"cadastroForm\" onSubmit={aoEnviar}>\r\n        {errorMessage && <ErrorMessage message={ErrorMessage} />}\r\n        <Row className=\"mb-3\">\r\n          <Form.Group as={Col} md=\"12\">\r\n            <Form.Label>Número do chamado</Form.Label>\r\n            <input\r\n              required\r\n              value={chamado.numeroChamado}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Número do chamado\"\r\n              id=\"numeroChamado\"\r\n              onChange={(e) =>\r\n                dispatch(\r\n                  atualizarValor({\r\n                    campo: \"numeroChamado\",\r\n                    valor: e.target.value,\r\n                  })\r\n                )\r\n              }\r\n            />\r\n            <Form.Label>Empresa</Form.Label>\r\n            <Select\r\n              value={chamado.empresa}\r\n              options={empresas}\r\n              onChange={(e) =>\r\n                dispatch(\r\n                  atualizarValor({\r\n                    campo: \"empresa\",\r\n                    valor: e.target.value,\r\n                  })\r\n                )\r\n              }\r\n            />\r\n            <Form.Label>Contrato</Form.Label>\r\n            <Select\r\n              value={chamado.contrato}\r\n              options={contratos}\r\n              onChange={(e) =>\r\n                dispatch(\r\n                  atualizarValor({\r\n                    campo: \"contrato\",\r\n                    valor: e.target.value,\r\n                  })\r\n                )\r\n              }\r\n            />\r\n            <Form.Label>Data de Início</Form.Label>\r\n            <Form.Control\r\n              required\r\n              value={formatarDataParaInput(chamado.dataInicio)}\r\n              type=\"datetime-local\"\r\n              min=\"2000-01-01T00:00\"\r\n              onChange={(e) =>\r\n                dispatch(\r\n                  atualizarValor({\r\n                    campo: \"dataInicio\",\r\n                    valor: e.target.value,\r\n                  })\r\n                )\r\n              }\r\n            />\r\n            <Form.Label>Solicitante</Form.Label>\r\n            <Form.Control\r\n              required\r\n              value={chamado.solicitante}\r\n              type=\"text\"\r\n              placeholder=\"Digite o nome do solicitante\"\r\n              onChange={(e) =>\r\n                dispatch(\r\n                  atualizarValor({\r\n                    campo: \"solicitante\",\r\n                    valor: e.target.value,\r\n                  })\r\n                )\r\n              }\r\n            />\r\n            <Form.Label>Criticidade revisada</Form.Label>\r\n            <Select\r\n              value={chamado.criticidadeRevisada}\r\n              options={criticidades}\r\n              onChange={(e) =>\r\n                dispatch(\r\n                  atualizarValor({\r\n                    campo: \"criticidadeRevisada\",\r\n                    valor: e.target.value,\r\n                  })\r\n                )\r\n              }\r\n            />\r\n            <Form.Label>Data de encerramento</Form.Label>\r\n            <Form.Control\r\n              value={formatarDataParaInput(chamado.dataEncerramento)}\r\n              min=\"2000-01-01T00:00\"\r\n              max=\"2099-12-31T00:00\"\r\n              type=\"datetime-local\"\r\n              onChange={(e) =>\r\n                dispatch(\r\n                  atualizarValor({\r\n                    campo: \"dataEncerramento\",\r\n                    valor: e.target.value,\r\n                  })\r\n                )\r\n              }\r\n            />\r\n            <Form.Label>Chamado encerrado?</Form.Label>\r\n            <Form.Check\r\n              type=\"switch\"\r\n              label={chamadoEncerrado ? \"Sim\" : \"Não\"}\r\n              checked={chamadoEncerrado}\r\n              onChange={handleSwitchChange}\r\n            ></Form.Check>\r\n            <Form.Label>Tipo de chamado</Form.Label>\r\n            <Select\r\n              value={chamado.tipoChamado}\r\n              options={tipoChamado}\r\n              onChange={(e) =>\r\n                dispatch(\r\n                  atualizarValor({\r\n                    campo: \"tipoChamado\",\r\n                    valor: e.target.value,\r\n                  })\r\n                )\r\n              }\r\n            />\r\n            <Form.Label>Descrição do chamado</Form.Label>\r\n            <textarea\r\n              value={chamado.descricaoChamado}\r\n              id=\"descricaoChamado\"\r\n              required\r\n              rows=\"3\"\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              onChange={(e) =>\r\n                dispatch(\r\n                  atualizarValor({\r\n                    campo: \"descricaoChamado\",\r\n                    valor: e.target.value,\r\n                  })\r\n                )\r\n              }\r\n            ></textarea>\r\n          </Form.Group>\r\n        </Row>\r\n        <div className=\"m-1\">\r\n          <Button size=\"sm\" variant=\"success\" type=\"submit\">\r\n            Enviar\r\n          </Button>{\" \"}\r\n          <Button size=\"sm\" onClick={aoVoltar}>\r\n            Cancelar\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import Alert from \"react-bootstrap/Alert\";\r\n\r\nexport default function ErrorMessage({ message }) {\r\n  return (\r\n    <Alert\r\n      variant=\"danger\"\r\n      style={{ position: \"fixed\", top: \"20px\", right: \"20px\", zIndex: 9999 }}\r\n    >\r\n      {message}\r\n    </Alert>\r\n  );\r\n}\r\n"],"names":["Select","_ref","value","options","onChange","_jsxs","className","required","children","_jsx","Object","entries","map","_ref2","optionValue","label","EditarChamado","chamado","useSelector","state","dispatch","useDispatch","params","useParams","navigate","useNavigate","chamadoEncerrado","setChamadoEncerrado","useState","errorMessage","setErrorMessage","formatarDataParaServer","data","Date","isNaN","getTime","toISOString","formatarDataParaInput","dataFormatada","ano","getFullYear","mes","String","getMonth","padStart","dia","getDate","horas","getHours","minutos","getMinutes","concat","useEffect","async","id","response","fetch","ok","Error","json","preencherChamados","error","console","fetchData","aoEnviar","useCallback","e","preventDefault","dataInicio","dataEncerramento","inicio","dataInicioFormatted","dataEncerramentoFormatted","method","headers","body","JSON","stringify","atualizarValor","limparForm","tempoChamado","aoVoltar","handleSwitchChange","valor","target","checked","campo","Form","onSubmit","ErrorMessage","message","Row","Group","as","Col","md","Label","numeroChamado","type","placeholder","empresa","empresas","contrato","contratos","Control","min","solicitante","criticidadeRevisada","criticidades","max","Check","tipoChamado","descricaoChamado","rows","Button","size","variant","onClick","Alert","style","position","top","right","zIndex"],"sourceRoot":""}
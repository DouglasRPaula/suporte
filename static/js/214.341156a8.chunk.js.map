{"version":3,"file":"static/js/214.341156a8.chunk.js","mappings":"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","sources":["frontend/hooks/useCadastro.jsx","frontend/cadastros/CadastrosPage.jsx","frontend/cadastros/Select.js","frontend/modal/ErrorMessage.jsx"],"sourcesContent":["import { useState, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  adicionarChamado,\r\n  atualizarValor,\r\n  limparForm,\r\n  tempoChamado,\r\n} from \"../redux/chamadosSlice\";\r\n\r\nconst BAD_REQUEST = 400;\r\n\r\nexport default function useCadastro() {\r\n  const chamado = useSelector((state) => state.chamado);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [chamadoEncerrado, setChamadoEncerrado] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const formatarDataParaServer = (data) => {\r\n    if (!data) return \"\";\r\n    if (!(data instanceof Date) || isNaN(data.getTime())) {\r\n      return \"\";\r\n    }\r\n    return data.toISOString();\r\n  };\r\n\r\n  const aoEnviar = useCallback(\r\n    async (e) => {\r\n      e.preventDefault();\r\n\r\n      if (!chamado) {\r\n        setErrorMessage(\"chamado is undefined\");\r\n        return;\r\n      }\r\n\r\n      const { dataInicio, dataEncerramento } = chamado;\r\n\r\n      const inicio = new Date(dataInicio);\r\n      const encerramento = new Date(dataEncerramento);\r\n\r\n      if (encerramento < inicio) {\r\n        setErrorMessage(\r\n          \"A data de encerramento não pode ser anterior à data de início.\"\r\n        );\r\n        return;\r\n      }\r\n\r\n      const novoChamado = { ...chamado, chamadoEncerrado: chamadoEncerrado };\r\n\r\n      dispatch(adicionarChamado(novoChamado));\r\n\r\n      const dataInicioFormatted = formatarDataParaServer(\r\n        new Date(chamado.dataInicio)\r\n      );\r\n      const dataEncerramentoFormatted = formatarDataParaServer(\r\n        new Date(chamado.dataEncerramento)\r\n      );\r\n\r\n      const response = await fetch(\"http://localhost:5000/chamados/adicionar\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          ...novoChamado,\r\n          dataInicio: dataInicioFormatted,\r\n          dataEncerramento: dataEncerramentoFormatted,\r\n        }),\r\n      });\r\n\r\n      if (response.status === BAD_REQUEST) {\r\n        const data = await response.json();\r\n        dispatch(\r\n          atualizarValor({\r\n            error: data.error,\r\n          })\r\n        );\r\n        return;\r\n      }\r\n\r\n      dispatch(limparForm());\r\n      dispatch(tempoChamado(novoChamado));\r\n      navigate(\"/chamados\");\r\n    },\r\n    [chamado, chamadoEncerrado, dispatch, navigate]\r\n  );\r\n\r\n  const aoVoltar = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      navigate(\"/chamados\");\r\n    },\r\n    [navigate]\r\n  );\r\n\r\n  const handleSwitchChange = useCallback(\r\n    (e) => {\r\n      const valor = e.target.checked;\r\n      setChamadoEncerrado(e.target.checked);\r\n\r\n      dispatch(atualizarValor({ campo: \"chamadoEncerrado\", valor }));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return { chamado, errorMessage, aoEnviar, aoVoltar, handleSwitchChange };\r\n}\r\n","import { useDispatch } from \"react-redux\";\r\nimport Select from \"./Select.js\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport {\r\n  empresas,\r\n  contratos,\r\n  tipoChamado,\r\n  criticidades,\r\n} from \"../constants/opcoesFormulario.js\";\r\nimport useCadastro from \"../hooks/useCadastro.jsx\";\r\nimport ErrorMessage from \"../modal/ErrorMessage.jsx\";\r\nimport { atualizarValor } from \"../redux/chamadosSlice.js\";\r\n\r\nexport default function CadastroPage() {\r\n  const dispatch = useDispatch();\r\n  const { chamado, errorMessage, aoEnviar, aoVoltar, handleSwitchChange } =\r\n    useCadastro();\r\n  const { chamadoEncerrado } = chamado;\r\n\r\n  return (\r\n    <div className=\"ml-sm-auto\">\r\n      <div className=\"my-2\">\r\n        <div className=\"d-flex justify-content-between flex-nowrap align-items-center pb-2 mb-3 border-bottom\">\r\n          <h1 className=\"h4 mb-0\">Cadastro de chamados</h1>\r\n        </div>\r\n      </div>\r\n      <Form id=\"cadastroForm\" onSubmit={aoEnviar}>\r\n        {errorMessage && <ErrorMessage message={errorMessage} />}\r\n        <Row className=\"mb-3\">\r\n          <Form.Group as={Col} md=\"12\">\r\n            <Form.Label>Número do chamado</Form.Label>\r\n            <input\r\n              required\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Número do chamado\"\r\n              id=\"numeroChamado\"\r\n              onChange={(e) =>\r\n                dispatch(\r\n                  atualizarValor({\r\n                    campo: \"numeroChamado\",\r\n                    valor: e.target.value,\r\n                  })\r\n                )\r\n              }\r\n            />\r\n            <Form.Label>Empresa</Form.Label>\r\n            <Select\r\n              options={empresas}\r\n              onChange={(e) =>\r\n                dispatch(\r\n                  atualizarValor({\r\n                    campo: \"empresa\",\r\n                    valor: e.target.value,\r\n                  })\r\n                )\r\n              }\r\n            />\r\n            <Form.Label>Contrato</Form.Label>\r\n            <Select\r\n              options={contratos}\r\n              onChange={(e) =>\r\n                dispatch(\r\n                  atualizarValor({\r\n                    campo: \"contrato\",\r\n                    valor: e.target.value,\r\n                  })\r\n                )\r\n              }\r\n            />\r\n            <Form.Label>Data de Início</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"datetime-local\"\r\n              min=\"2000-01-01T00:00\"\r\n              onChange={(e) =>\r\n                dispatch(\r\n                  atualizarValor({\r\n                    campo: \"dataInicio\",\r\n                    valor: e.target.value,\r\n                  })\r\n                )\r\n              }\r\n            />\r\n            <Form.Label>Solicitante</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"Digite o nome do solicitante\"\r\n              onChange={(e) =>\r\n                dispatch(\r\n                  atualizarValor({\r\n                    campo: \"solicitante\",\r\n                    valor: e.target.value,\r\n                  })\r\n                )\r\n              }\r\n            />\r\n            <Form.Label>Criticidade revisada</Form.Label>\r\n            <Select\r\n              options={criticidades}\r\n              onChange={(e) =>\r\n                dispatch(\r\n                  atualizarValor({\r\n                    campo: \"criticidadeRevisada\",\r\n                    valor: e.target.value,\r\n                  })\r\n                )\r\n              }\r\n            />\r\n            <Form.Label>Data de encerramento</Form.Label>\r\n            <Form.Control\r\n              min=\"2000-01-01T00:00\"\r\n              max=\"2099-12-31T00:00\"\r\n              type=\"datetime-local\"\r\n              onChange={(e) =>\r\n                dispatch(\r\n                  atualizarValor({\r\n                    campo: \"dataEncerramento\",\r\n                    valor: e.target.value,\r\n                  })\r\n                )\r\n              }\r\n            />\r\n            <Form.Label>Chamado encerrado?</Form.Label>\r\n            <Form.Check\r\n              type=\"switch\"\r\n              label={chamadoEncerrado ? \"Sim\" : \"Não\"}\r\n              checked={chamadoEncerrado}\r\n              onChange={handleSwitchChange}\r\n            ></Form.Check>\r\n            <Form.Label>Tipo de chamado</Form.Label>\r\n            <Select\r\n              options={tipoChamado}\r\n              onChange={(e) =>\r\n                dispatch(\r\n                  atualizarValor({\r\n                    campo: \"tipoChamado\",\r\n                    valor: e.target.value,\r\n                  })\r\n                )\r\n              }\r\n            />\r\n            <Form.Label>Descrição do chamado</Form.Label>\r\n            <textarea\r\n              id=\"descricaoChamado\"\r\n              required\r\n              rows=\"3\"\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              onChange={(e) =>\r\n                dispatch(\r\n                  atualizarValor({\r\n                    campo: \"descricaoChamado\",\r\n                    valor: e.target.value,\r\n                  })\r\n                )\r\n              }\r\n            ></textarea>\r\n          </Form.Group>\r\n        </Row>\r\n        <div className=\"m-1\">\r\n          <Button size=\"sm\" variant=\"success\" type=\"submit\">\r\n            Enviar\r\n          </Button>{\" \"}\r\n          <Button size=\"sm\" onClick={aoVoltar}>\r\n            Cancelar\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","export default function Select({ value, options, onChange }) {\r\n  return (\r\n    <select className=\"form-select\" value={value} required onChange={onChange}>\r\n      <option value=\"\">Selecione uma opção</option>\r\n      {Object.entries(options).map(([optionValue, label]) => (\r\n        <option key={optionValue} value={optionValue}>\r\n          {label}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n}","import Alert from \"react-bootstrap/Alert\";\r\n\r\nexport default function ErrorMessage({ message }) {\r\n  return (\r\n    <Alert\r\n      variant=\"danger\"\r\n      style={{ position: \"fixed\", top: \"20px\", right: \"20px\", zIndex: 9999 }}\r\n    >\r\n      {message}\r\n    </Alert>\r\n  );\r\n}\r\n"],"names":["BAD_REQUEST","CadastroPage","dispatch","useDispatch","chamado","errorMessage","aoEnviar","aoVoltar","handleSwitchChange","useSelector","state","navigate","useNavigate","chamadoEncerrado","setChamadoEncerrado","useState","setErrorMessage","formatarDataParaServer","data","Date","isNaN","getTime","toISOString","useCallback","async","e","preventDefault","dataInicio","dataEncerramento","inicio","novoChamado","adicionarChamado","dataInicioFormatted","dataEncerramentoFormatted","response","fetch","method","headers","body","JSON","stringify","status","limparForm","tempoChamado","json","atualizarValor","error","valor","target","checked","campo","useCadastro","_jsxs","className","children","_jsx","Form","id","onSubmit","ErrorMessage","message","Row","Group","as","Col","md","Label","required","type","placeholder","onChange","value","Select","options","empresas","contratos","Control","min","criticidades","max","Check","label","tipoChamado","rows","Button","size","variant","onClick","_ref","Object","entries","map","_ref2","optionValue","Alert","style","position","top","right","zIndex"],"sourceRoot":""}